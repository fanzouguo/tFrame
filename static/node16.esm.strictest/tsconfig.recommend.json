{
  "$schema": "https://json.schemastore.org/tsconfig",
  "display": "From Node 16 + ESM + Strictest",
	"compilerOptions": {
		// #region Basic Options 基本选项
		"allowJs": false, // 允许编译 javascript 文件
		"removeComments": false, // 移除编译后的所有的注释
		"preserveConstEnums": true,  // 保留 const 和 enum 声明
		"isolatedModules": false, // 将每个文件做为单独的模块 （与 'ts.transpileModule' 类似）,
    "plugins": [
      // 转换输出 js 文件中的路径
      { "transform": "typescript-transform-paths" },

      // 转换输出 .d.ts 文件中的路径
      { "transform": "typescript-transform-paths", "afterDeclarations": true }
    ],
		"noEmit": false,	// 设置是否输出 js 文件，一般是设置为 false，将打包等工作交给 Webpack 等工具
		// #endregion

		// #region Strict Type-Checking Options 严格的类型检查选项
		"strict": true, // 启⽤所有严格类型检查选项
		"noImplicitAny": true, // 在表达式和声明上有隐含的 any类型时报错
		"strictNullChecks": true, // 启用严格的 null 检查
		"noImplicitThis": true, // 当 this 表达式值为 any 类型的时候，生成一个错误
		"alwaysStrict": true, // 以严格模式检查每个模块，并在每个文件里加入 'use strict'
		// #endregion

		// #region Additional Checks 额外的检查
		"noUnusedLocals": true, // 有未使用的变量时，抛出错误
		"noUnusedParameters": true, // 有未使用的参数时，抛出错误
		"noImplicitReturns": true, // 并不是所有函数里的代码都有返回值时，抛出错误
		"noFallthroughCasesInSwitch": true, // 报告 switch 语句的 fallthrough 错误。（即，不允许 switch 的 case 语句贯穿）
		// #endregion

		// #region Module Resolution Options 模块解析选项
		"moduleResolution": "node", // 选择模块解析策略： 'node' (Node.js) or 'classic' (TypeScript pre-1.6)
    "allowUnusedLabels": false,	// 不报告未使用的标签错误
    "allowUnreachableCode": false,	// 不报告执行不到的代码错误
    "exactOptionalPropertyTypes": false,	// 解释可选的属性类型，而不是添加'undefined'
    "noImplicitOverride": true,	// 确保派生类中的重写成员用重写修饰符标记
    "noPropertyAccessFromIndexSignature": false,	// 强制对使用索引类型声明的键使用索引访问器
    "noUncheckedIndexedAccess": true,	// 在索引签名结果中包含'undefined'
    "importsNotUsedAsValues": "error",	// 为仅用于类型的导入指定生成/检查行为
    "checkJs": false,	// 在类型检查的JavaScript文件中启用错误报告
		"allowSyntheticDefaultImports": true, // 允许从没有设置默认导出的模块中默认导入
		"esModuleInterop": true, // 支持合成模块的默认导入
		// #endregion

		// #region Source Map Options SourceMap选项
		// #endregion

		// #region Experimental Options 其他选项
		"experimentalDecorators": true, // 启用装饰器
		"emitDecoratorMetadata": false, // （rollup-ESbuild 不支持而关闭）为装饰器提供元数据的支持
		"resolveJsonModule": true,	// 包含导入的模块。json的扩展。支持ts 文件导入 json
		// #endregion

		// #region Advanced Options 高级选项
		"skipLibCheck": true, // 跳过声明文件的类型检查
		"forceConsistentCasingInFileNames": true // 不允许对同一文件使用不一致大小写的引用
		// #endregion
	},
	"typeAcquisition": {
		"enable": false,
		"include": ["jest"]
	}
}